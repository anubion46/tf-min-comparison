for(i in 1:length(colnames(d))){
for(j in j:length(colnames(d)){
res <- c(res, if(all.equal(d[,i], d[,j]) c(colnames(d)[i], colnames(d)[j])))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
for(i in 1:length(colnames(d))){
for(j in j:length(colnames(d))){
res <- c(res, if(all.equal(d[,i], d[,j]) c(colnames(d)[i], colnames(d)[j])))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
for(i in 1:length(colnames(d))){
for(j in i:length(colnames(d))){
res <- c(res, if(all.equal(d[,i], d[,j]) c(colnames(d)[i], colnames(d)[j])))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
for(i in 1:length(colnames(d)){
for(j in i:length(colnames(d))){
res <- c(res, if(all.equal(d[,i], d[,j]) c(colnames(d)[i], colnames(d)[j])))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
for(i in 1:length(colnames(d)){
for(j in i:length(colnames(d)){
res <- c(res, if(all.equal(d[,i], d[,j]) c(colnames(d)[i], colnames(d)[j])))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
for(i in 1:length(colnames(d))){
for(j in i:length(colnames(d))){
res <- c(res, if(all.equal(d[,i], d[,j]) c(colnames(d)[i], colnames(d)[j])))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)){
for(j in i:length(cnames)){
res <- c(res, if(all.equal(d[,i], d[,j]) {c(cnames[i], cnames[j])})
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)){
for(j in i:length(cnames)){
res <- c(res, if(all.equal(d[,i], d[,j])) c(cnames[i], cnames[j]))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)){
for(j in i:length(cnames)){
res <- c(res, if(all.equal(d[,i], d[,j])) c(cnames[i], cnames[j]))
}
}
ifelse(is.null(res), "There is no collinearity in the data", unique(res))
return(res)
}
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
head(swiss[1:3])
all.equal(swiss[1:3])
all.equal(swiss[,1], swiss[,1])
all.equal(swiss[,1], swiss[,2])
all.equal(swiss[,1], swiss[,3])
isTRUE(all.equal(swiss[,1], swiss[,3]))
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)){
for(j in i:length(cnames)){
res <- c(res, if(isTRUE(all.equal(d[,i], d[,j]))) c(cnames[i], cnames[j]))
}
}
ifelse(is.null(res), "There is no collinearity in the data", unique(res))
return(res)
}
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
ifelse(is.null(res), "There is no collinearity in the data", unique(res))
return(res)
}
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)-1){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
ifelse(is.null(res), "There is no collinearity in the data", unique(res))
return(res)
}
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)-1){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
return(res)
}
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
ifelse(is.null(res), "There is no collinearity in the data", unique(res))
}
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)-1){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
ifelse(is.null(res), "There is no collinearity in the data", unique(res))
}
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_2.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)-1){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
ifelse(is.null(res), "There is no collinearity in the data", res)
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)-1){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
if(is.null(res)) "There is no collinearity in the data" else unique(res)
}
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_3.csv")
is_multicol(test_data)
test_data <- as.data.frame(list(V1 = c(2, 3, 5, 7, 15), V2 = c(-16, 3, -4, -14, -16), V3 = c(15, 20, 13, 12, 0), V4 = c(22, 3, 10, 20, 22), V5 = c(-6, 18, 16, -3, 9), V6 = c(8, 9, 11, 13, 21), V7 = c(-3, 20, 2, -2, 14)))
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)-1){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
if(is.null(res)) "There is no collinearity in the data" else res
}
is_multicol(test_data)
View(test_data)
View(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)-1){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(as.character(d[,i]), as.character(d[,j]))))
c(cnames[i], cnames[j])
)
}
}
if(is.null(res)) "There is no collinearity in the data" else res
}
is_multicol(test_data)
corr.test(d)
library(psych)
library(psych)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr.test(d)
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr.test(d)$r
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
any(abs(corr_test) == 1)
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
which(abs(corr_test) == 1)
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
abs(corr_test) == 1
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
which(abs(corr_test) == 1, arr.ind = T)
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
rownames(which(abs(corr_test) == 1, arr.ind = T))
}
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
if(all(corr_test) < 1) return("There is no collinearity in the data")
rownames(which(abs(corr_test) == 1, arr.ind = T))
}
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_2.csv")
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_2.csv")
is_multicol(test_data)
is_multicol <- function(d){
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
if(all(corr_test) < 1) return("There is no collinearity in the data")
rownames(which(abs(corr_test) == 1, arr.ind = T))
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
if(all(abs(corr_test)) < 1) return("There is no collinearity in the data")
rownames(which(abs(corr_test) == 1, arr.ind = T))
}
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_3.csv")
is_multicol(test_data)
test_data <- as.data.frame(list(V1 = c(2, 3, 5, 7, 15), V2 = c(-16, 3, -4, -14, -16), V3 = c(15, 20, 13, 12, 0), V4 = c(22, 3, 10, 20, 22), V5 = c(-6, 18, 16, -3, 9), V6 = c(8, 9, 11, 13, 21), V7 = c(-3, 20, 2, -2, 14)))
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
if(any(abs(corr_test)) < 1) return(rownames(which(abs(corr_test) == 1, arr.ind = T))) else  return("There is no collinearity in the data")
}
is_multicol(test_data)
test_data <- as.data.frame(list(V1 = c(2, 3, 5, 7, 15), V2 = c(-16, 3, -4, -14, -16), V3 = c(15, 20, 13, 12, 0), V4 = c(22, 3, 10, 20, 22), V5 = c(-6, 18, 16, -3, 9), V6 = c(8, 9, 11, 13, 21), V7 = c(-3, 20, 2, -2, 14)))
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
if(any(abs(corr_test)) == 1) return(rownames(which(abs(corr_test) == 1, arr.ind = T))) else  return("There is no collinearity in the data")
}
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_2.csv")
is_multicol(test_data)
any(abs(corr.test(test_data)$r)
)
any(abs(corr.test(test_data)$r) < 1)
abs(corr.test(test_data)$r)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
return(corr_test)
#if(any(abs(corr_test)) == 1) return(rownames(which(abs(corr_test) == 1, arr.ind = T))) else  return("There is no collinearity in the data")
}
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
return(any(abs(corr_test) < 1))
#if(any(abs(corr_test)) == 1) return(rownames(which(abs(corr_test) == 1, arr.ind = T))) else  return("There is no collinearity in the data")
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
return(any(abs(corr_test) == 1))
#if(any(abs(corr_test)) == 1) return(rownames(which(abs(corr_test) == 1, arr.ind = T))) else  return("There is no collinearity in the data")
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
if(any(abs(corr_test) == 1)) return(rownames(which(abs(corr_test) == 1, arr.ind = T))) else  return("There is no collinearity in the data")
}
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_2.csv")
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_3.csv")
is_multicol(test_data)
test_data <- as.data.frame(list(V1 = c(2, 3, 5, 7, 15), V2 = c(-16, 3, -4, -14, -16), V3 = c(15, 20, 13, 12, 0), V4 = c(22, 3, 10, 20, 22), V5 = c(-6, 18, 16, -3, 9), V6 = c(8, 9, 11, 13, 21), V7 = c(-3, 20, 2, -2, 14)))
is_multicol(test_data)
fit <- factanal(swiss, factors = 2, rotation = "varimax")
print(fit)
ggplot(smart_hclust(swiss), aes(Education, Catholic, col = cluster)) +
geom_smooth()
ggplot(smart_hclust(swiss, 2), aes(Education, Catholic, col = cluster)) +
geom_smooth()
ggplot(smart_hclust(swiss, 2), aes(Education, Catholic, col = cluster)) +
geom_smooth(method = 'lm') +
geom_point()
library("ggplot2", lib.loc="D:/Program Files/R/R-3.4.2/library")
library("dplyr", lib.loc="D:/Program Files/R/R-3.4.2/library")
library("reshape2", lib.loc="D:/Program Files/R/R-3.4.2/library")
setwd("D:/Worknfiles/PyCharm Projects/tf-min-comparison/output")
file <- read.csv('test_results.csv')
ggplot(file, aes(iteration)) +
geom_line(aes(y = value, color = method), size = 1) +
ggtitle(title) +
scale_x_continuous(name = 'X', limits = c(0, 100)) +
scale_y_continuous(name = 'Y') +
scale_colour_manual(name = "Legend", labels = c("Step size", "Calculated value"), values=c("blue", "red")) +
facet_grid(metric ~ , labeller = label_both)
file <- read.csv('test_results.csv')
ggplot(file, aes(iteration)) +
geom_line(aes(y = value, color = method), size = 1) +
ggtitle(title) +
scale_x_continuous(name = 'X', limits = c(0, 100)) +
scale_y_continuous(name = 'Y') +
facet_grid(metric ~ , labeller = label_both)
ggplot(file, aes(iteration)) +
geom_line(aes(y = value, color = method), size = 1) +
ggtitle(title) +
scale_x_continuous(name = 'X', limits = c(0, 100)) +
scale_y_continuous(name = 'Y') +
facet_grid(metric ~.)
ggplot(file, aes(iteration)) +
geom_line(aes(y = value, color = method), size = 1) +
ggtitle(title) +
scale_x_continuous(name = 'X') +
scale_y_continuous(name = 'Y') +
facet_grid(metric ~.)
ggplot(file, aes(iteration)) +
geom_line(aes(y = value, color = method), size = 1) +
scale_x_continuous(name = 'X') +
scale_y_continuous(name = 'Y') +
facet_grid(metric ~.)
file <-  file[file[,1] == 'median',]
ggplot(file, aes(iteration)) +
geom_line(aes(y = value, color = method), size = 1) +
scale_x_continuous(name = 'X') +
scale_y_continuous(name = 'Y')
View(file)
View(file)
file <- read.csv('test_results.csv')
file <- read.csv('test_results.csv')
file <-  file[file[,2] == 'median',]
ggplot(file, aes(iteration)) +
geom_line(aes(y = value, color = method), size = 1) +
scale_x_continuous(name = 'X') +
scale_y_continuous(name = 'Y')
file <- read.csv('test_results.csv')
file <-  file[file[,2] == 'best',]
ggplot(file, aes(iteration)) +
geom_line(aes(y = value, color = method), size = 1) +
scale_x_continuous(name = 'X') +
scale_y_continuous(name = 'Y')
file <-  file[file[,2] == 'worst',]
file <- read.csv('test_results.csv')
file <-  file[file[,2] == 'worst',]
ggplot(file, aes(iteration)) +
geom_line(aes(y = value, color = method), size = 1) +
scale_x_continuous(name = 'X') +
scale_y_continuous(name = 'Y')
file <- read.csv('test_results.csv')
file <-  file[file[,2] == 'mean',]
ggplot(file, aes(iteration)) +
geom_line(aes(y = value, color = method), size = 1) +
scale_x_continuous(name = 'X') +
scale_y_continuous(name = 'Y')
file <- read.csv('test_results.csv')
file <-  file[file[,2] == 'median',]
ggplot(file, aes(iteration)) +
geom_line(aes(y = value, color = method), size = 1) +
scale_x_continuous(name = 'X') +
scale_y_continuous(name = 'Y')
file <- read.csv('test_results.csv')
file <-  file[file[,2] == 'median',]
ggplot(file, aes(iteration)) +
geom_line(aes(y = value, color = method), size = 1) +
scale_x_continuous(name = 'X') +
scale_y_continuous(name = 'Y')
file <- read.csv('test_results.csv')
file <-  file[file[,2] == 'median',]
ggplot(file, aes(iteration)) +
geom_line(aes(y = value, color = method), size = 1) +
scale_x_continuous(name = 'X') +
scale_y_continuous(name = 'Y')
library(ggplot2)
library(dplyr)
library(reshape2)
file <- read.csv('test_results.csv')
file <-  file[file[,2] == 'median',]
ggplot(file, aes(iteration)) +
geom_line(aes(y = value, color = method), size = 1) +
scale_x_continuous(name = 'X') +
scale_y_continuous(name = 'Y')
