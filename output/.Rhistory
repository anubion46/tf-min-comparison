prcomp(test_data)$x
prcomp(test_data)
summary(prcomp(data))
summary(prcomp(test_data))
summary(prcomp(test_data))$cum
str(summary(prcomp(test_data)))
summary(prcomp(test_data))$import
summary(prcomp(test_data))$importance[3]
summary(prcomp(test_data))$importance[3,]
which(rank(summary(prcomp(test_data))$importance[3,]) > 0.90)
rank(summary(prcomp(test_data))$importance[3,]) > 0.90
rank(summary(prcomp(test_data))$importance[3,])
which(summary(prcomp(test_data))$importance[3,] > 0.90)
which(summary(prcomp(test_data))$importance[3,] > 0.90)[1]
get_pca2 <- function(data){
n <- which(summary(prcomp(data))$importance[3,] > 0.90)[1]
cbind(d, prcomp(d)$x[,1:n])
}
get_pca2(swiss)
str(get_pca2(swiss))
get_pca2 <- function(data){
n <- which(summary(prcomp(data))$importance[3,] > 0.90)[1]
cbind(d, prcomp(data)$x[,1:n])
}
str(get_pca2(swiss))
get_pca2 <- function(data){
n <- which(summary(prcomp(data))$importance[3,] > 0.90)[1]
cbind(data, prcomp(data)$x[,1:n])
}
str(get_pca2(swiss))
?all.equal()
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
for(i in 1:length(colnames(d))){
for(j in j:length(colnames(d)){
res <- c(res, if(all.equal(d[,i], d[,j]) c(colnames(d)[i], colnames(d)[j]))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
for(i in 1:length(colnames(d))){
for(j in j:length(colnames(d)){
res <- c(res, if(all.equal(d[,i], d[,j]) c(colnames(d)[i], colnames(d)[j])))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
for(i in 1:length(colnames(d))){
for(j in j:length(colnames(d))){
res <- c(res, if(all.equal(d[,i], d[,j]) c(colnames(d)[i], colnames(d)[j])))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
for(i in 1:length(colnames(d))){
for(j in i:length(colnames(d))){
res <- c(res, if(all.equal(d[,i], d[,j]) c(colnames(d)[i], colnames(d)[j])))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
for(i in 1:length(colnames(d)){
for(j in i:length(colnames(d))){
res <- c(res, if(all.equal(d[,i], d[,j]) c(colnames(d)[i], colnames(d)[j])))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
for(i in 1:length(colnames(d)){
for(j in i:length(colnames(d)){
res <- c(res, if(all.equal(d[,i], d[,j]) c(colnames(d)[i], colnames(d)[j])))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
for(i in 1:length(colnames(d))){
for(j in i:length(colnames(d))){
res <- c(res, if(all.equal(d[,i], d[,j]) c(colnames(d)[i], colnames(d)[j])))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)){
for(j in i:length(cnames)){
res <- c(res, if(all.equal(d[,i], d[,j]) {c(cnames[i], cnames[j])})
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)){
for(j in i:length(cnames)){
res <- c(res, if(all.equal(d[,i], d[,j])) c(cnames[i], cnames[j]))
}
}
return(res)
}
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)){
for(j in i:length(cnames)){
res <- c(res, if(all.equal(d[,i], d[,j])) c(cnames[i], cnames[j]))
}
}
ifelse(is.null(res), "There is no collinearity in the data", unique(res))
return(res)
}
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
head(swiss[1:3])
all.equal(swiss[1:3])
all.equal(swiss[,1], swiss[,1])
all.equal(swiss[,1], swiss[,2])
all.equal(swiss[,1], swiss[,3])
isTRUE(all.equal(swiss[,1], swiss[,3]))
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)){
for(j in i:length(cnames)){
res <- c(res, if(isTRUE(all.equal(d[,i], d[,j]))) c(cnames[i], cnames[j]))
}
}
ifelse(is.null(res), "There is no collinearity in the data", unique(res))
return(res)
}
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
ifelse(is.null(res), "There is no collinearity in the data", unique(res))
return(res)
}
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)-1){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
ifelse(is.null(res), "There is no collinearity in the data", unique(res))
return(res)
}
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)-1){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
return(res)
}
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
ifelse(is.null(res), "There is no collinearity in the data", unique(res))
}
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)-1){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
ifelse(is.null(res), "There is no collinearity in the data", unique(res))
}
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_2.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)-1){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
ifelse(is.null(res), "There is no collinearity in the data", res)
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)-1){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
if(is.null(res)) "There is no collinearity in the data" else unique(res)
}
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_3.csv")
is_multicol(test_data)
test_data <- as.data.frame(list(V1 = c(2, 3, 5, 7, 15), V2 = c(-16, 3, -4, -14, -16), V3 = c(15, 20, 13, 12, 0), V4 = c(22, 3, 10, 20, 22), V5 = c(-6, 18, 16, -3, 9), V6 = c(8, 9, 11, 13, 21), V7 = c(-3, 20, 2, -2, 14)))
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)-1){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(d[,i], d[,j])))
c(cnames[i], cnames[j])
)
}
}
if(is.null(res)) "There is no collinearity in the data" else res
}
is_multicol(test_data)
View(test_data)
View(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
res <- c()
cnames <- colnames(d)
for(i in 1:length(cnames)-1){
for(j in (i+1):length(cnames)){
res <- c(res,
if(isTRUE(all.equal(as.character(d[,i]), as.character(d[,j]))))
c(cnames[i], cnames[j])
)
}
}
if(is.null(res)) "There is no collinearity in the data" else res
}
is_multicol(test_data)
corr.test(d)
library(psych)
library(psych)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr.test(d)
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr.test(d)$r
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
any(abs(corr_test) == 1)
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
which(abs(corr_test) == 1)
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
abs(corr_test) == 1
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
which(abs(corr_test) == 1, arr.ind = T)
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
rownames(which(abs(corr_test) == 1, arr.ind = T))
}
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
if(all(corr_test) < 1) return("There is no collinearity in the data")
rownames(which(abs(corr_test) == 1, arr.ind = T))
}
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_2.csv")
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_2.csv")
is_multicol(test_data)
is_multicol <- function(d){
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
if(all(corr_test) < 1) return("There is no collinearity in the data")
rownames(which(abs(corr_test) == 1, arr.ind = T))
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
if(all(abs(corr_test)) < 1) return("There is no collinearity in the data")
rownames(which(abs(corr_test) == 1, arr.ind = T))
}
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_3.csv")
is_multicol(test_data)
test_data <- as.data.frame(list(V1 = c(2, 3, 5, 7, 15), V2 = c(-16, 3, -4, -14, -16), V3 = c(15, 20, 13, 12, 0), V4 = c(22, 3, 10, 20, 22), V5 = c(-6, 18, 16, -3, 9), V6 = c(8, 9, 11, 13, 21), V7 = c(-3, 20, 2, -2, 14)))
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
if(any(abs(corr_test)) < 1) return(rownames(which(abs(corr_test) == 1, arr.ind = T))) else  return("There is no collinearity in the data")
}
is_multicol(test_data)
test_data <- as.data.frame(list(V1 = c(2, 3, 5, 7, 15), V2 = c(-16, 3, -4, -14, -16), V3 = c(15, 20, 13, 12, 0), V4 = c(22, 3, 10, 20, 22), V5 = c(-6, 18, 16, -3, 9), V6 = c(8, 9, 11, 13, 21), V7 = c(-3, 20, 2, -2, 14)))
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
if(any(abs(corr_test)) == 1) return(rownames(which(abs(corr_test) == 1, arr.ind = T))) else  return("There is no collinearity in the data")
}
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_2.csv")
is_multicol(test_data)
any(abs(corr.test(test_data)$r)
)
any(abs(corr.test(test_data)$r) < 1)
abs(corr.test(test_data)$r)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
return(corr_test)
#if(any(abs(corr_test)) == 1) return(rownames(which(abs(corr_test) == 1, arr.ind = T))) else  return("There is no collinearity in the data")
}
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_1.csv")
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
return(any(abs(corr_test) < 1))
#if(any(abs(corr_test)) == 1) return(rownames(which(abs(corr_test) == 1, arr.ind = T))) else  return("There is no collinearity in the data")
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
return(any(abs(corr_test) == 1))
#if(any(abs(corr_test)) == 1) return(rownames(which(abs(corr_test) == 1, arr.ind = T))) else  return("There is no collinearity in the data")
}
is_multicol(test_data)
is_multicol <- function(d){
d <- sapply(d, function(x) x - mean(x))
corr_test <- corr.test(d)$r
diag(corr_test) <- 0
if(any(abs(corr_test) == 1)) return(rownames(which(abs(corr_test) == 1, arr.ind = T))) else  return("There is no collinearity in the data")
}
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_2.csv")
is_multicol(test_data)
test_data <- read.csv("https://stepic.org/media/attachments/course/524/Norris_3.csv")
is_multicol(test_data)
test_data <- as.data.frame(list(V1 = c(2, 3, 5, 7, 15), V2 = c(-16, 3, -4, -14, -16), V3 = c(15, 20, 13, 12, 0), V4 = c(22, 3, 10, 20, 22), V5 = c(-6, 18, 16, -3, 9), V6 = c(8, 9, 11, 13, 21), V7 = c(-3, 20, 2, -2, 14)))
is_multicol(test_data)
fit <- factanal(swiss, factors = 2, rotation = "varimax")
print(fit)
ggplot(smart_hclust(swiss), aes(Education, Catholic, col = cluster)) +
geom_smooth()
ggplot(smart_hclust(swiss, 2), aes(Education, Catholic, col = cluster)) +
geom_smooth()
ggplot(smart_hclust(swiss, 2), aes(Education, Catholic, col = cluster)) +
geom_smooth(method = 'lm') +
geom_point()
setwd("D:/Worknfiles/PyCharm Projects/tf-min-comparison/output")
library(ggplot2)
trends = read.csv('trend_2_0_0.csv')
n = 10
adam_trends = trends[trends[,1] == 'adam',]
adam_trends$learning_rate = factor(adam_trends$learning_rate)
ggplot(adam_trends, aes(x = rep.int(1:(length(value)/n), n), y = value, color = as.factor(learning_rate))) +
geom_line(size = 1, alpha = 0.75) +
geom_point() +
ggtitle('ADAM PLOT') +
scale_color_discrete(name = "Learning rates") +
scale_x_continuous(name = 'X',
limits = c(0, length(adam_trends[,3])/n)) +
scale_y_continuous(name = 'Y',
limits = c(min(adam_trends[,3]), max(adam_trends[,3]))) +
facet_grid(learning_rate~.)
momentum_trends = trends[trends[,1] == 'momentum',]
momentum_trends$learning_rate = factor(momentum_trends$learning_rate)
ggplot(momentum_trends, aes(x = rep.int(1:(length(value)/n), n), y = value, color = as.factor(learning_rate))) +
geom_line(size = 1, alpha = 0.75) +
geom_point() +
ggtitle('MOMENTUM PLOT') +
scale_color_discrete(name = "Learning rates") +
scale_x_continuous(name = 'X',
limits = c(0, length(momentum_trends[,3])/n)) +
scale_y_continuous(name = 'Y',
limits = c(min(momentum_trends[,3]), max(momentum_trends[,3]))) +
facet_grid(learning_rate~.)
adadelta_trends = trends[trends[,1] == 'adadelta',]
adadelta_trends$learning_rate = factor(adadelta_trends$learning_rate)
ggplot(adadelta_trends, aes(x = rep.int(1:(length(value)/n), n), y = value, color = as.factor(learning_rate))) +
geom_line(size = 1, alpha = 0.75) +
geom_point() +
ggtitle('ADADELTA PLOT') +
scale_color_discrete(name = "Learning rates") +
scale_x_continuous(name = 'X',
limits = c(0, length(adadelta_trends[,3])/n)) +
scale_y_continuous(name = 'Y',
limits = c(min(adadelta_trends[,3]), max(adadelta_trends[,3]))) +
facet_grid(learning_rate~.)
adagrad_trends = trends[trends[,1] == 'adagrad',]
adagrad_trends$learning_rate = factor(adagrad_trends$learning_rate)
ggplot(adagrad_trends, aes(x = rep.int(1:(length(value)/n), n), y = value, color = as.factor(learning_rate))) +
geom_line(size = 1, alpha = 0.75) +
geom_point() +
ggtitle('ADAGRAD PLOT') +
scale_color_discrete(name = "Learning rates") +
scale_x_continuous(name = 'X',
limits = c(0, length(adagrad_trends[,3])/n)) +
scale_y_continuous(name = 'Y',
limits = c(min(adagrad_trends[,3]), max(adagrad_trends[,3]))) +
facet_grid(learning_rate~.)
